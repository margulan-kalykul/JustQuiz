{
	"info": {
		"_postman_id": "9930e64b-3e33-48ec-be1f-4caf83a4793e",
		"name": "Quiz",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27003255"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const randomId = Math.random().toString(36).substring(2, 10);\r",
									"pm.environment.set(\"email\", `${randomId}@example.com`);\r",
									"pm.environment.set(\"password\", `password${randomId}`);\r",
									"pm.environment.set(\"name\", `Name-${randomId}`);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"pm.environment.set(\"activationToken\", responseData.user.token);\r",
									"\r",
									"pm.test('response is ok', () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test('response should have json with activationToken', () => {\r",
									"    const response = pm.response.json();\r",
									"\r",
									"    // Check that field in response\r",
									"    pm.expect(response.error).to.be.string;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"name\": \"{{name}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response is ok', () => {\r",
									"\tpm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('user should be activated', () => {\r",
									"\tconst response = pm.response.json();\r",
									"\r",
									"\t// Check that field in response\r",
									"\tpm.expect(response.user.activated).to.be.true;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\": \"{{activationToken}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/users/activated",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"users",
								"activated"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const res = pm.response.json();\r",
									"\r",
									"pm.test('response is ok', () => {\r",
									"\tpm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const token = res.authentication_token.token;\r",
									"\r",
									"pm.test('response should have json with auth token', () => {\r",
									"\t// Check that field in response\r",
									"\tpm.expect(token).to.be.string;\r",
									"});\r",
									"\r",
									"pm.environment.set(\"token\", token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/users/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response is ok', () => {\r",
									"\tpm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('user should be activated', () => {\r",
									"\tconst response = pm.response.json();\r",
									"\r",
									"\t// Check that field in response\r",
									"\tpm.expect(response.user.activated).to.be.true;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\": \"IO2FAVWKDHSMMP33FS4MT5JCSI\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/users/activated",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"users",
								"activated"
							]
						}
					},
					"response": [
						{
							"name": "Admin Register",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"admin@example.com\",\r\n    \"password\": \"password\",\r\n    \"name\": \"admin\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/v1/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"v1",
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Authorization"
								},
								{
									"key": "Date",
									"value": "Fri, 03 May 2024 21:42:46 GMT"
								},
								{
									"key": "Content-Length",
									"value": "208"
								}
							],
							"cookie": [],
							"body": "{\n    \"user\": {\n        \"token\": \"IO2FAVWKDHSMMP33FS4MT5JCSI\",\n        \"user\": {\n            \"id\": 6,\n            \"created_at\": \"2024-05-04T03:42:46+06:00\",\n            \"name\": \"admin\",\n            \"email\": \"admin@example.com\",\n            \"activated\": false\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const res = pm.response.json();\r",
									"\r",
									"pm.test('response is ok', () => {\r",
									"\tpm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const token = res.authentication_token.token;\r",
									"\r",
									"pm.test('response should have json with auth token', () => {\r",
									"\t// Check that field in response\r",
									"\tpm.expect(token).to.be.string;\r",
									"});\r",
									"\r",
									"pm.environment.set(\"token\", token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/v1/users/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin Register",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		},
		{
			"name": "Meta",
			"item": [
				{
					"name": "Healthcheck",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "db",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		},
		{
			"name": "App",
			"item": [
				{
					"name": "CreatePlayer",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"aaa\"\r\n}"
						},
						"url": {
							"raw": "{{host}}/v1/players",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"players"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetPlayerByID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/v1/players/7",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"v1",
								"players",
								"7"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdatePlayerById",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Jack\",\r\n    \"score\": 555\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/v1/players/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"v1",
								"players",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteById",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const menus = pm.environment.get(\"menus\");\r",
									"const token = pm.environment.get(\"admin_cur_token\");\r",
									"pm.request.headers.add({\r",
									"    key: \"Authorization\",\r",
									"    value: \"Bearer \" + token\r",
									"});\r",
									"const id = menus && menus.length > 0 ? menus[0].id : 1;\r",
									"pm.variables.set(\"id\", id)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response is unauthorized', () => {\r",
									"\tpm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Jack\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/players/6",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"players",
								"6"
							]
						}
					},
					"response": []
				},
				{
					"name": "PlayersList",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const res = pm.response.json();\r",
									"pm.environment.set(\"players\", res.players);\r",
									"\r",
									"pm.test('response is ok', () => {\r",
									"\tpm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('should respond with list', () => {\r",
									"\t// Check that field in response\r",
									"\tpm.expect(res.players).to.be.an.instanceOf(Array);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/v1/players",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"players"
							],
							"query": [
								{
									"key": "sort",
									"value": "name",
									"disabled": true
								},
								{
									"key": "page_size",
									"value": "2",
									"disabled": true
								},
								{
									"key": "page",
									"value": "2",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PlayersList Paginated",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.addQueryParams(\"page=2\");\r",
									"pm.request.addQueryParams(\"page_size=2\")\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response is ok', () => {\r",
									"\tpm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('should respond with two items', () => {\r",
									"\tconst response = pm.response.json();\r",
									"\t// Check that field in response\r",
									"\tpm.expect(response.players.length).to.be.eq(2);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/v1/players",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"players"
							],
							"query": [
								{
									"key": "sort",
									"value": "name",
									"disabled": true
								},
								{
									"key": "page_size",
									"value": "2",
									"disabled": true
								},
								{
									"key": "page",
									"value": "2",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PlayersList Filtered",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.addQueryParams(\"name=Jack\");\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response is ok', () => {\r",
									"\tpm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('should respond with 1 item', () => {\r",
									"\tconst response = pm.response.json();\r",
									"\t// Check that field in response\r",
									"\tpm.expect(response.players.length).to.be.eq(1);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"aaa\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/players",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"players"
							],
							"query": [
								{
									"key": "sort",
									"value": "name",
									"disabled": true
								},
								{
									"key": "page_size",
									"value": "2",
									"disabled": true
								},
								{
									"key": "page",
									"value": "2",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PlayersList Sorted",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.addQueryParams(\"name=Jack\");\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response is ok', () => {\r",
									"\tpm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('should respond with 1 item', () => {\r",
									"\tconst response = pm.response.json();\r",
									"\t// Check that field in response\r",
									"\tpm.expect(response.players.length).to.be.eq(1);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"aaa\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/players",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"players"
							],
							"query": [
								{
									"key": "sort",
									"value": "name",
									"disabled": true
								},
								{
									"key": "page_size",
									"value": "2",
									"disabled": true
								},
								{
									"key": "page",
									"value": "2",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}